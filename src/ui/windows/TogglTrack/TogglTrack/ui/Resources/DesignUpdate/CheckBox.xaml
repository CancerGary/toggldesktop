<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:togglTrack="clr-namespace:TogglTrack">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ErrorTemplate.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="CheckBoxValidationErrorTemplate">
        <AdornedElementPlaceholder x:Name="placeholder">
            <Grid SnapsToDevicePixels="True">
                <Rectangle x:Name="PopupTargetElement"
                           Margin="-2 0"
                           DataContext="{Binding ElementName=placeholder}"
                           StrokeThickness="0" />
                <Border x:Name="ValidationErrorElement"
                        DataContext="{Binding ElementName=placeholder}">
                </Border>

                <mah:CustomValidationPopup x:Name="ValidationPopup"
                                           Placement="Top"
                                           AllowsTransparency="True"
                                           IsOpen="False"
                                           PlacementTarget="{Binding ElementName=PopupTargetElement, Mode=OneWay}"
                                           Child="{StaticResource ValidationPopupRoot}">
                </mah:CustomValidationPopup>
            </Grid>
        </AdornedElementPlaceholder>

        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=placeholder, Path=AdornedElement.IsKeyboardFocusWithin, Mode=OneWay}" Value="True" />
                    <Condition Binding="{Binding ElementName=placeholder, Path=AdornedElement.(Validation.HasError), Mode=OneWay}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="ValidationPopup" Property="IsOpen" Value="True" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!--  ********************************** CheckBoxStyle **********************************  -->
    <!--  adapted from http://brianlagunas.com/free-metro-light-and-dark-themes-for-wpf-and-silverlight-microsoft-controls/  -->

    <!-- Win10 style taken from https://github.com/MahApps/MahApps.Metro/pull/3534 with custom modifications -->
    <!-- to be removed when we can use Win10 style checkbox from the MahApps.Metro library directly -->

    <Style x:Key="MahApps.Styles.CheckBox.Win10" TargetType="CheckBox">
        <Setter Property="BorderBrush" Value="{DynamicResource Toggl.SelectionElements.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource CheckBoxValidationErrorTemplate}" />
        <Setter Property="togglTrack:CheckBoxHelper.CheckBoxSize" Value="20" />
        <Setter Property="togglTrack:CheckBoxHelper.CheckedBackgroundBrush" Value="{DynamicResource Toggl.AccentBrush}" />
        <Setter Property="togglTrack:CheckBoxHelper.CheckedBorderBrush" Value="{DynamicResource Toggl.AccentBrush}" />
        <Setter Property="togglTrack:CheckBoxHelper.CheckedGlyphTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Path HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Margin="1"
                              Data="M90.890625,12.890625L95.109375,17.109375 30,82.265625 0.890625,53.109375 5.10937547683716,48.890625 30,73.734375 90.890625,12.890625z"
                              Stretch="Uniform"
                              Stroke="{DynamicResource Toggl.SelectionElements.Background}"
                              UseLayoutRounding="False" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="togglTrack:CheckBoxHelper.IntermediateBackgroundBrush" Value="{DynamicResource Toggl.SelectionElements.Background}" />
        <Setter Property="togglTrack:CheckBoxHelper.IntermediateBorderBrush" Value="{DynamicResource Toggl.SelectionElements.Border}" />
        <Setter Property="togglTrack:CheckBoxHelper.IntermediateGlyphTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Rectangle Margin="4" Fill="#9D9D9D" /> <!-- TODO: fix when we start using Intermediate state -->
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="togglTrack:CheckBoxHelper.UnCheckedBackgroundBrush" Value="{DynamicResource Toggl.SelectionElements.Background}" />
        <Setter Property="togglTrack:CheckBoxHelper.UnCheckedBorderBrush" Value="{DynamicResource Toggl.SelectionElements.Border}" />
        <Setter Property="mah:ControlsHelper.FocusBorderBrush" Value="{DynamicResource Toggl.AccentBrush}" />
        <Setter Property="mah:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource Toggl.TextBox.MouseOverBorder}" />
        <Setter Property="FontFamily" Value="{DynamicResource BaseFont}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="{DynamicResource Toggl.PrimaryTextBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Padding" Value="8 0 0 0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="LeftCol" Width="Auto" />
                            <ColumnDefinition x:Name="RightCol" Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid x:Name="PART_CHECKBOX">
                            <Rectangle Margin="-6 0" Fill="Transparent" />
                            <Border x:Name="CheckedBorder"
                                    Width="{TemplateBinding togglTrack:CheckBoxHelper.CheckBoxSize}"
                                    Height="{TemplateBinding togglTrack:CheckBoxHelper.CheckBoxSize}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Background="{TemplateBinding togglTrack:CheckBoxHelper.CheckedBackgroundBrush}"
                                    BorderBrush="{TemplateBinding togglTrack:CheckBoxHelper.CheckedBorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                                    Opacity="0"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <ContentControl Content="{TemplateBinding togglTrack:CheckBoxHelper.CheckedGlyph}"
                                                ContentTemplate="{TemplateBinding togglTrack:CheckBoxHelper.CheckedGlyphTemplate}"
                                                Focusable="False"
                                                IsTabStop="False" />
                            </Border>

                            <Border x:Name="UnCheckedBorder"
                                    Width="{TemplateBinding togglTrack:CheckBoxHelper.CheckBoxSize}"
                                    Height="{TemplateBinding togglTrack:CheckBoxHelper.CheckBoxSize}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Background="{TemplateBinding togglTrack:CheckBoxHelper.UnCheckedBackgroundBrush}"
                                    BorderBrush="{TemplateBinding togglTrack:CheckBoxHelper.UnCheckedBorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                                    Opacity="0"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <ContentControl Content="{TemplateBinding togglTrack:CheckBoxHelper.UnCheckedGlyph}"
                                                ContentTemplate="{TemplateBinding togglTrack:CheckBoxHelper.UnCheckedGlyphTemplate}"
                                                Focusable="False"
                                                IsTabStop="False" />
                            </Border>

                            <Border x:Name="IntermediateBorder"
                                    Width="{TemplateBinding togglTrack:CheckBoxHelper.CheckBoxSize}"
                                    Height="{TemplateBinding togglTrack:CheckBoxHelper.CheckBoxSize}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Background="{TemplateBinding togglTrack:CheckBoxHelper.IntermediateBackgroundBrush}"
                                    BorderBrush="{TemplateBinding togglTrack:CheckBoxHelper.IntermediateBorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                                    Opacity="0"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <ContentControl Content="{TemplateBinding togglTrack:CheckBoxHelper.IntermediateGlyph}"
                                                ContentTemplate="{TemplateBinding togglTrack:CheckBoxHelper.IntermediateGlyphTemplate}"
                                                Focusable="False"
                                                IsTabStop="False" />
                            </Border>

                            <Border x:Name="disabled"
                                    Width="{TemplateBinding togglTrack:CheckBoxHelper.CheckBoxSize}"
                                    Height="{TemplateBinding togglTrack:CheckBoxHelper.CheckBoxSize}"
                                    Background="{DynamicResource Toggl.SelectionElements.Disabled.Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                                    Opacity="0"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="1"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                          RecognizesAccessKey="True" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <!-- <DoubleAnimation Storyboard.TargetName="contentPresenter" -->
                                        <!--                  Storyboard.TargetProperty="(UIElement.Opacity)" -->
                                        <!--                  To=".55" -->
                                        <!--                  Duration="0" /> -->
                                        <DoubleAnimation Storyboard.TargetName="disabled"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckedBorder"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="UnCheckedBorder"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IntermediateBorder"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CheckedBorder" Property="BorderBrush" Value="{DynamicResource Toggl.Button.Accent.MouseOverBorder}" />
                            <Setter TargetName="IntermediateBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.MouseOverBorderBrush)}" />
                            <Setter TargetName="UnCheckedBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.MouseOverBorderBrush)}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="CheckedBorder" Property="BorderBrush" Value="{DynamicResource Toggl.AccentBrush}" />
                            <Setter TargetName="IntermediateBorder" Property="BorderBrush" Value="{DynamicResource Toggl.AccentBrush}" />
                            <Setter TargetName="UnCheckedBorder" Property="BorderBrush" Value="{DynamicResource Toggl.AccentBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="CheckedBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.FocusBorderBrush)}" />
                            <Setter TargetName="IntermediateBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.FocusBorderBrush)}" />
                            <Setter TargetName="UnCheckedBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.FocusBorderBrush)}" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="CheckedBorder" Property="BorderBrush" Value="{DynamicResource Toggl.ErrorMessageBackground}" />
                            <Setter TargetName="IntermediateBorder" Property="BorderBrush" Value="{DynamicResource Toggl.ErrorMessageBackground}" />
                            <Setter TargetName="UnCheckedBorder" Property="BorderBrush" Value="{DynamicResource Toggl.ErrorMessageBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="CheckedBorder" Property="Background" Value="{DynamicResource Toggl.LightGrayBrush}" />
                            <Setter TargetName="CheckedBorder" Property="BorderBrush" Value="{DynamicResource Toggl.LightGrayBrush}" />
                            <Setter TargetName="UnCheckedBorder" Property="BorderBrush" Value="{DynamicResource Toggl.LightGrayBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource Toggl.DisabledTextBrush}" />
                        </Trigger>
                        <Trigger Property="FlowDirection" Value="RightToLeft">
                            <Setter TargetName="CheckedBorder" Property="LayoutTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="-1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="IntermediateBorder" Property="LayoutTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="-1" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="UnCheckedBorder" Property="LayoutTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="-1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="mah:ToggleButtonHelper.ContentDirection" Value="RightToLeft">
                            <Setter Property="Padding" Value="0 0 6 0" />
                            <Setter TargetName="LeftCol" Property="Width" Value="*" />
                            <Setter TargetName="PART_CHECKBOX" Property="Grid.Column" Value="1" />
                            <Setter TargetName="RightCol" Property="Width" Value="Auto" />
                            <Setter TargetName="contentPresenter" Property="Grid.Column" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style BasedOn="{StaticResource MahApps.Styles.CheckBox.Win10}" TargetType="CheckBox" />
</ResourceDictionary>